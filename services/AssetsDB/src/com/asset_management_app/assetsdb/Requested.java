/*Copyright (c) 2019-2020 imaginea.com All Rights Reserved.
 This software is the confidential and proprietary information of imaginea.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with imaginea.com*/
package com.asset_management_app.assetsdb;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.sql.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.ForeignKey;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

/**
 * Requested generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`REQUESTED`")
public class Requested implements Serializable {

    private Integer id;
    private Boolean assigned;
    private Date assignedDate;
    private Date requestedDate;
    private Integer requestedQty;
    private Integer deviceId;
    private Integer deptId;
    private Integer assignedQty;
    private Department department;
    private DeviceInventory deviceInventory;

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "`ID`", nullable = false, scale = 0, precision = 10)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "`ASSIGNED`", nullable = true)
    public Boolean getAssigned() {
        return this.assigned;
    }

    public void setAssigned(Boolean assigned) {
        this.assigned = assigned;
    }

    @Column(name = "`ASSIGNED_DATE`", nullable = true)
    public Date getAssignedDate() {
        return this.assignedDate;
    }

    public void setAssignedDate(Date assignedDate) {
        this.assignedDate = assignedDate;
    }

    @Column(name = "`REQUESTED_DATE`", nullable = true)
    public Date getRequestedDate() {
        return this.requestedDate;
    }

    public void setRequestedDate(Date requestedDate) {
        this.requestedDate = requestedDate;
    }

    @Column(name = "`REQUESTED_QTY`", nullable = true, scale = 0, precision = 10)
    public Integer getRequestedQty() {
        return this.requestedQty;
    }

    public void setRequestedQty(Integer requestedQty) {
        this.requestedQty = requestedQty;
    }

    @Column(name = "`DEVICE ID`", nullable = true, scale = 0, precision = 10)
    public Integer getDeviceId() {
        return this.deviceId;
    }

    public void setDeviceId(Integer deviceId) {
        this.deviceId = deviceId;
    }

    @Column(name = "`DEPT_ID`", nullable = true, scale = 0, precision = 10)
    public Integer getDeptId() {
        return this.deptId;
    }

    public void setDeptId(Integer deptId) {
        this.deptId = deptId;
    }

    @Column(name = "`ASSIGNED_QTY`", nullable = true, scale = 0, precision = 10)
    public Integer getAssignedQty() {
        return this.assignedQty;
    }

    public void setAssignedQty(Integer assignedQty) {
        this.assignedQty = assignedQty;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`DEPT_ID`", referencedColumnName = "`ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_REQUESTED_TO_DEPARTMEDivHh`"))
    @Fetch(FetchMode.JOIN)
    public Department getDepartment() {
        return this.department;
    }

    public void setDepartment(Department department) {
        if(department != null) {
            this.deptId = department.getId();
        }

        this.department = department;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "`DEVICE ID`", referencedColumnName = "`DEVICE ID`", insertable = false, updatable = false, foreignKey = @ForeignKey(name = "`FK_re8x4k2m37jq8lkupp453pavv`"))
    @Fetch(FetchMode.JOIN)
    public DeviceInventory getDeviceInventory() {
        return this.deviceInventory;
    }

    public void setDeviceInventory(DeviceInventory deviceInventory) {
        if(deviceInventory != null) {
            this.deviceId = deviceInventory.getDeviceId();
        }

        this.deviceInventory = deviceInventory;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Requested)) return false;
        final Requested requested = (Requested) o;
        return Objects.equals(getId(), requested.getId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId());
    }
}